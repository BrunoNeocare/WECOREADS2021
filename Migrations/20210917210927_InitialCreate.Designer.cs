// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210917210927_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Idade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Numero")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("vendasidVenda")
                        .HasColumnType("int");

                    b.HasKey("IdFuncionario");

                    b.HasIndex("vendasidVenda");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("WebApplication1.Models.Produtos", b =>
                {
                    b.Property<int>("idProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nomeProduto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("tipoProduto")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("valorProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("WebApplication1.Models.Vendas", b =>
                {
                    b.Property<int>("idVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("produtoSelecionado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("produtosidProduto")
                        .HasColumnType("int");

                    b.HasKey("idVenda");

                    b.HasIndex("produtosidProduto");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("WebApplication1.Models.Funcionario", b =>
                {
                    b.HasOne("WebApplication1.Models.Vendas", "vendas")
                        .WithMany()
                        .HasForeignKey("vendasidVenda");

                    b.Navigation("vendas");
                });

            modelBuilder.Entity("WebApplication1.Models.Vendas", b =>
                {
                    b.HasOne("WebApplication1.Models.Produtos", "produtos")
                        .WithMany("vendas")
                        .HasForeignKey("produtosidProduto");

                    b.Navigation("produtos");
                });

            modelBuilder.Entity("WebApplication1.Models.Produtos", b =>
                {
                    b.Navigation("vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
